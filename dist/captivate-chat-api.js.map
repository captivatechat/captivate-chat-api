{"version":3,"file":"captivate-chat-api.js","mappings":"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","sources":["webpack://CaptivateChatAPI/webpack/universalModuleDefinition","webpack://CaptivateChatAPI/./src/api/CaptivateChatAPI.ts","webpack://CaptivateChatAPI/./src/api/Conversation.ts","webpack://CaptivateChatAPI/./node_modules/ws/browser.js","webpack://CaptivateChatAPI/webpack/bootstrap","webpack://CaptivateChatAPI/./src/index.ts"],"sourcesContent":["(function webpackUniversalModuleDefinition(root, factory) {\n\tif(typeof exports === 'object' && typeof module === 'object')\n\t\tmodule.exports = factory();\n\telse if(typeof define === 'function' && define.amd)\n\t\tdefine([], factory);\n\telse if(typeof exports === 'object')\n\t\texports[\"CaptivateChatAPI\"] = factory();\n\telse\n\t\troot[\"CaptivateChatAPI\"] = factory();\n})(this, () => {\nreturn ","\"use strict\";\nvar __awaiter = (this && this.__awaiter) || function (thisArg, _arguments, P, generator) {\n    function adopt(value) { return value instanceof P ? value : new P(function (resolve) { resolve(value); }); }\n    return new (P || (P = Promise))(function (resolve, reject) {\n        function fulfilled(value) { try { step(generator.next(value)); } catch (e) { reject(e); } }\n        function rejected(value) { try { step(generator[\"throw\"](value)); } catch (e) { reject(e); } }\n        function step(result) { result.done ? resolve(result.value) : adopt(result.value).then(fulfilled, rejected); }\n        step((generator = generator.apply(thisArg, _arguments || [])).next());\n    });\n};\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.CaptivateChatAPI = void 0;\nconst Conversation_1 = require(\"./Conversation\");\n// Determine WebSocket implementation based on environment\nconst WebSocketImpl = typeof window !== 'undefined' && window.WebSocket\n    ? window.WebSocket\n    : require('ws');\nclass CaptivateChatAPI {\n    constructor(apiKey, mode = 'prod') {\n        this.apiKey = apiKey;\n        this.mode = mode;\n        this.url =\n            this.mode === 'prod'\n                ? `wss://channel.wss.captivatechat.ai/dev?apiKey=${apiKey}`\n                : `wss://channel-dev.wss.captivatechat.ai/dev?apiKey=${apiKey}`;\n        this.socket = null;\n        this.conversations = new Map();\n    }\n    _send(message) {\n        if (this.socket && this.socket.readyState === WebSocketImpl.OPEN) {\n            this.socket.send(JSON.stringify(message));\n        }\n        else {\n            console.error('Socket is not open. Message not sent:', message);\n        }\n    }\n    connect() {\n        return __awaiter(this, void 0, void 0, function* () {\n            return new Promise((resolve, reject) => {\n                try {\n                    this.socket = new WebSocketImpl(this.url);\n                    const timeoutId = setTimeout(() => {\n                        reject(new Error('Connection timeout: socket_connected not received'));\n                    }, 10000);\n                    this.socket.onopen = () => {\n                        console.log('WebSocket connected, waiting for API confirmation...');\n                    };\n                    this.socket.onmessage = (event) => {\n                        var _a;\n                        try {\n                            const message = JSON.parse(event.data.toString());\n                            if (((_a = message.event) === null || _a === void 0 ? void 0 : _a.event_type) === 'socket_connected') {\n                                console.log('API Successfully Connected');\n                                clearTimeout(timeoutId);\n                                resolve();\n                            }\n                        }\n                        catch (err) {\n                            console.error('Error parsing message:', err);\n                        }\n                    };\n                    this.socket.onerror = (event) => {\n                        console.error('WebSocket Error:', event.message || event);\n                        clearTimeout(timeoutId);\n                        reject(new Error(event.message || 'WebSocket error'));\n                    };\n                    this.socket.onclose = () => {\n                        console.log('WebSocket connection closed');\n                    };\n                }\n                catch (error) {\n                    reject(error);\n                }\n            });\n        });\n    }\n    createConversation(userId_1) {\n        return __awaiter(this, arguments, void 0, function* (userId, userBasicInfo = {}, userData = {}, autoConversationStart = 'bot-first') {\n            return new Promise((resolve, reject) => {\n                var _a;\n                try {\n                    this._send({\n                        action: 'sendMessage',\n                        event: {\n                            event_type: 'conversation_start',\n                            event_payload: {\n                                userId,\n                                userBasicInfo,\n                                userData,\n                            },\n                        },\n                    });\n                    const onMessage = (event) => {\n                        var _a, _b;\n                        try {\n                            const message = JSON.parse(event.data.toString());\n                            if (((_a = message.event) === null || _a === void 0 ? void 0 : _a.event_type) === 'conversation_start_success') {\n                                const conversationId = message.event.event_payload.conversation_id;\n                                (_b = this.socket) === null || _b === void 0 ? void 0 : _b.removeEventListener('message', onMessage);\n                                const conversation = new Conversation_1.Conversation(conversationId, this.socket);\n                                this.conversations.set(conversationId, conversation);\n                                if (autoConversationStart === 'bot-first') {\n                                    conversation\n                                        .sendMessage('')\n                                        .then(() => resolve(conversation))\n                                        .catch(reject);\n                                }\n                                else {\n                                    resolve(conversation);\n                                }\n                            }\n                        }\n                        catch (err) {\n                            console.error('Error processing message:', err);\n                        }\n                    };\n                    (_a = this.socket) === null || _a === void 0 ? void 0 : _a.addEventListener('message', onMessage);\n                    setTimeout(() => {\n                        var _a;\n                        (_a = this.socket) === null || _a === void 0 ? void 0 : _a.removeEventListener('message', onMessage);\n                        reject(new Error('Timeout: No response for createConversation'));\n                    }, 10000);\n                }\n                catch (error) {\n                    reject(error);\n                }\n            });\n        });\n    }\n    getConversation(conversationId) {\n        return this.conversations.get(conversationId) || null;\n    }\n}\nexports.CaptivateChatAPI = CaptivateChatAPI;\n","\"use strict\";\nvar __awaiter = (this && this.__awaiter) || function (thisArg, _arguments, P, generator) {\n    function adopt(value) { return value instanceof P ? value : new P(function (resolve) { resolve(value); }); }\n    return new (P || (P = Promise))(function (resolve, reject) {\n        function fulfilled(value) { try { step(generator.next(value)); } catch (e) { reject(e); } }\n        function rejected(value) { try { step(generator[\"throw\"](value)); } catch (e) { reject(e); } }\n        function step(result) { result.done ? resolve(result.value) : adopt(result.value).then(fulfilled, rejected); }\n        step((generator = generator.apply(thisArg, _arguments || [])).next());\n    });\n};\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.Conversation = void 0;\nclass Conversation {\n    constructor(conversationId, socket) {\n        this.conversationId = conversationId;\n        this.socket = socket;\n        this.listeners = new Map();\n        this.socket.onmessage = (event) => {\n            var _a, _b;\n            const message = JSON.parse(event.data);\n            const eventType = (_a = message.event) === null || _a === void 0 ? void 0 : _a.event_type;\n            if (eventType && this.listeners.has(eventType)) {\n                const payload = message.event.event_payload;\n                (_b = this.listeners.get(eventType)) === null || _b === void 0 ? void 0 : _b.forEach((callback) => callback(payload));\n            }\n        };\n    }\n    addListener(eventType, callback) {\n        var _a;\n        if (!this.listeners.has(eventType)) {\n            this.listeners.set(eventType, []);\n        }\n        (_a = this.listeners.get(eventType)) === null || _a === void 0 ? void 0 : _a.push(callback);\n    }\n    onMessage(callback) {\n        this.addListener('bot_message', (payload) => callback(payload.content));\n        this.addListener('livechat_message', (payload) => callback(payload.content));\n    }\n    onConversationUpdate(callback) {\n        this.addListener('conversation_update', (payload) => {\n            callback({\n                type: payload.type,\n                conversationId: payload.conversation_id,\n                data: payload.data,\n            });\n        });\n    }\n    onError(callback) {\n        this.addListener('general_error', (payload) => {\n            callback({\n                conversationId: payload.conversation_id,\n                errorCode: payload.error_code,\n                errorDesc: payload.error_desc,\n            });\n        });\n    }\n    sendMessage(content) {\n        return __awaiter(this, void 0, void 0, function* () {\n            return this.sendPayload('user_message', {\n                type: 'message_create',\n                client_msg_id: `unique-message-id-${Date.now()}`,\n                conversation_id: this.conversationId,\n                content,\n            });\n        });\n    }\n    setMetadata(metadata) {\n        return __awaiter(this, void 0, void 0, function* () {\n            return this.sendPayload('metadata', {\n                metadata,\n                client_msg_id: `metadata-${Date.now()}`,\n                conversation_id: this.conversationId,\n            });\n        });\n    }\n    sendAction(actionId_1) {\n        return __awaiter(this, arguments, void 0, function* (actionId, data = {}) {\n            return this.sendPayload('action', {\n                type: 'normal',\n                id: actionId,\n                data,\n                conversation_id: this.conversationId,\n            });\n        });\n    }\n    getTranscript() {\n        return __awaiter(this, void 0, void 0, function* () {\n            return new Promise((resolve, reject) => {\n                const transcriptRequest = {\n                    action: 'sendMessage',\n                    event: {\n                        event_type: 'conversation_transcript_request',\n                        event_payload: {\n                            conversation_id: this.conversationId,\n                        },\n                    },\n                };\n                this.socket.send(JSON.stringify(transcriptRequest));\n                const onMessage = (payload) => {\n                    if (payload.conversation_id === this.conversationId) {\n                        this.removeListener('conversation_transcript', onMessage);\n                        resolve(payload.transcript);\n                    }\n                };\n                this.addListener('conversation_transcript', onMessage);\n                setTimeout(() => {\n                    this.removeListener('conversation_transcript', onMessage);\n                    reject(new Error('Timeout: No response for transcript request'));\n                }, 10000);\n            });\n        });\n    }\n    sendPayload(eventType, payload) {\n        return __awaiter(this, void 0, void 0, function* () {\n            return new Promise((resolve, reject) => {\n                try {\n                    const message = {\n                        action: 'sendMessage',\n                        event: {\n                            event_type: eventType,\n                            event_payload: payload,\n                        },\n                    };\n                    this.socket.send(JSON.stringify(message));\n                    resolve();\n                }\n                catch (error) {\n                    reject(error);\n                }\n            });\n        });\n    }\n    removeListener(eventType, callback) {\n        const callbacks = this.listeners.get(eventType);\n        if (callbacks) {\n            this.listeners.set(eventType, callbacks.filter((cb) => cb !== callback));\n        }\n    }\n    getConversationId() {\n        return this.conversationId;\n    }\n}\nexports.Conversation = Conversation;\n","'use strict';\n\nmodule.exports = function () {\n  throw new Error(\n    'ws does not work in the browser. Browser clients must use the native ' +\n      'WebSocket object'\n  );\n};\n","// The module cache\nvar __webpack_module_cache__ = {};\n\n// The require function\nfunction __webpack_require__(moduleId) {\n\t// Check if module is in cache\n\tvar cachedModule = __webpack_module_cache__[moduleId];\n\tif (cachedModule !== undefined) {\n\t\treturn cachedModule.exports;\n\t}\n\t// Create a new module (and put it into the cache)\n\tvar module = __webpack_module_cache__[moduleId] = {\n\t\t// no module.id needed\n\t\t// no module.loaded needed\n\t\texports: {}\n\t};\n\n\t// Execute the module function\n\t__webpack_modules__[moduleId].call(module.exports, module, module.exports, __webpack_require__);\n\n\t// Return the exports of the module\n\treturn module.exports;\n}\n\n","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nconst CaptivateChatAPI_1 = require(\"./api/CaptivateChatAPI\"); // Import the CaptivateChatAPI class\n// For compatibility with the browser, we need to make sure it's available as a global variable.\nif (typeof window !== 'undefined') {\n    window.CaptivateChatAPI = CaptivateChatAPI_1.CaptivateChatAPI;\n}\n"],"names":["root","factory","exports","module","define","amd","this","__awaiter","thisArg","_arguments","P","generator","Promise","resolve","reject","fulfilled","value","step","next","e","rejected","result","done","then","apply","Object","defineProperty","CaptivateChatAPI","Conversation_1","WebSocketImpl","window","WebSocket","constructor","apiKey","mode","url","socket","conversations","Map","_send","message","readyState","OPEN","send","JSON","stringify","console","error","connect","timeoutId","setTimeout","Error","onopen","log","onmessage","event","_a","parse","data","toString","event_type","clearTimeout","err","onerror","onclose","createConversation","userId_1","arguments","userId","userBasicInfo","userData","autoConversationStart","action","event_payload","onMessage","_b","conversationId","conversation_id","removeEventListener","conversation","Conversation","set","sendMessage","catch","addEventListener","getConversation","get","listeners","eventType","has","payload","forEach","callback","addListener","push","content","onConversationUpdate","type","onError","errorCode","error_code","errorDesc","error_desc","sendPayload","client_msg_id","Date","now","setMetadata","metadata","sendAction","actionId_1","actionId","id","getTranscript","transcriptRequest","removeListener","transcript","callbacks","filter","cb","getConversationId","__webpack_module_cache__","__webpack_require__","moduleId","cachedModule","undefined","__webpack_modules__","call","CaptivateChatAPI_1"],"sourceRoot":""}