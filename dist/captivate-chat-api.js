!function(e,t){if("object"==typeof exports&&"object"==typeof module)module.exports=t();else if("function"==typeof define&&define.amd)define([],t);else{var n=t();for(var s in n)("object"==typeof exports?exports:e)[s]=n[s]}}(this,(()=>(()=>{"use strict";var e={86:function(e,t,n){var s=this&&this.__awaiter||function(e,t,n,s){return new(n||(n=Promise))((function(o,i){function r(e){try{c(s.next(e))}catch(e){i(e)}}function a(e){try{c(s.throw(e))}catch(e){i(e)}}function c(e){var t;e.done?o(e.value):(t=e.value,t instanceof n?t:new n((function(e){e(t)}))).then(r,a)}c((s=s.apply(e,t||[])).next())}))};Object.defineProperty(t,"__esModule",{value:!0}),t.CaptivateChatAPI=void 0;const o=n(52);let i;if("undefined"!=typeof window&&window.WebSocket)i=window.WebSocket;else if(void 0!==n.g&&n.g.WebSocket)i=n.g.WebSocket;else try{i=n(591)}catch(e){throw new Error("WebSocket not available in this environment and ws module could not be loaded")}t.CaptivateChatAPI=class{constructor(e,t="prod"){this.apiKey=e,this.mode=t,this.url="prod"===this.mode?`wss://channel.wss.captivatechat.ai/dev?apiKey=${e}`:`wss://channel-dev.wss.captivatechat.ai/dev?apiKey=${e}`,this.socket=null,this.conversations=new Map}_send(e){this.socket&&this.socket.readyState===i.OPEN?this.socket.send(JSON.stringify(e)):console.error("Socket is not open. Message not sent:",e)}connect(){return s(this,void 0,void 0,(function*(){return new Promise(((e,t)=>{try{this.socket=new i(this.url);const n=setTimeout((()=>{t(new Error("Connection timeout: socket_connected not received"))}),1e4);this.socket.onopen=()=>{console.log("WebSocket connected, waiting for API confirmation...")},this.socket.onmessage=t=>{var s;try{"socket_connected"===(null===(s=JSON.parse(t.data.toString()).event)||void 0===s?void 0:s.event_type)&&(console.log("API Successfully Connected"),clearTimeout(n),e())}catch(e){console.error("Error parsing message:",e)}},this.socket.onerror=e=>{console.error("WebSocket Error:",e.message||e),clearTimeout(n),t(new Error(e.message||"WebSocket error"))},this.socket.onclose=e=>{console.log("WebSocket connection closed with"),1e3!==e.code&&(console.log("Attempting to reconnect..."),setTimeout((()=>this.connect()),3e3))}}catch(e){t(e)}}))}))}createConversation(e){return s(this,arguments,void 0,(function*(e,t={},n={},s="bot-first"){return new Promise(((i,r)=>{var a;try{this._send({action:"sendMessage",event:{event_type:"conversation_start",event_payload:{userId:e,userBasicInfo:t,metadata:n}}});const c=e=>{var t,n;try{const a=JSON.parse(e.data.toString());if("conversation_start_success"===(null===(t=a.event)||void 0===t?void 0:t.event_type)){const e=a.event.event_payload.conversation_id;null===(n=this.socket)||void 0===n||n.removeEventListener("message",c);const t=new o.Conversation(e,this.socket);this.conversations.set(e,t),"bot-first"===s?t.sendMessage({type:"text",text:""}).then((()=>i(t))).catch(r):i(t)}}catch(e){console.error("Error processing message:",e)}};null===(a=this.socket)||void 0===a||a.addEventListener("message",c),setTimeout((()=>{var e;null===(e=this.socket)||void 0===e||e.removeEventListener("message",c),r(new Error("Timeout: No response for createConversation"))}),1e4)}catch(e){r(e)}}))}))}getConversation(e){let t=this.conversations.get(e);if(!t){if(null===this.socket)throw console.error("Socket is not initialized"),new Error("WebSocket connection not established");t=new o.Conversation(e,this.socket),this.conversations.set(e,t)}return null==t||t.restartListeners(),t}getUserConversations(e){return s(this,void 0,void 0,(function*(){const t="string"==typeof e?{userId:e}:e,{userId:n,filter:s={},search:i={},pagination:r={},apiKeys:a}=t,c=[];let d;const v=s&&Object.keys(s).length>0||i&&Object.keys(i).length>0||r&&Object.keys(r).length>0||a&&Array.isArray(a)&&a.length>0;return new Promise(((e,t)=>{var h;try{if(v){const e={userId:n};s&&Object.keys(s).length>0&&(e.filter=s),i&&Object.keys(i).length>0&&(e.search=i),r&&Object.keys(r).length>0&&(e.pagination=r),a&&Array.isArray(a)&&a.length>0&&(e.apiKeys=a),this._send({action:"sendMessage",event:{event_type:"get_user_conversations_v2",event_payload:e}})}else this._send({action:"sendMessage",event:{event_type:"get_user_conversations",event_payload:{userId:n}}});const u=n=>{var s,i;try{const t=JSON.parse(n.data.toString());if("user_conversations"===(null===(s=t.event)||void 0===s?void 0:s.event_type)){null===(i=this.socket)||void 0===i||i.removeEventListener("message",u);const n=t.event.event_payload.conversations;for(const e of n){const{conversation_id:t,metadata:n,apiKey:s}=e;null!==this.socket&&c.push(new o.Conversation(t,this.socket,n,s||this.apiKey))}t.event.event_payload.pagination&&(d=t.event.event_payload.pagination),e({conversations:c,pagination:d})}}catch(e){console.error("Error processing message:",e),t(e)}};null===(h=this.socket)||void 0===h||h.addEventListener("message",u),setTimeout((()=>{var e;null===(e=this.socket)||void 0===e||e.removeEventListener("message",u),t(new Error("Timeout: No response for getUserConversations"))}),1e4)}catch(e){t(e)}}))}))}deleteUserConversations(e){return s(this,void 0,void 0,(function*(){return new Promise(((t,n)=>{var s;if(!e)return n(new Error("User ID must be provided."));try{this._send({action:"sendMessage",event:{event_type:"delete_conversation",event_payload:{userId:e}}});const o=s=>{var i,r;try{const n=JSON.parse(s.data.toString());"delete_conversation_success"===(null===(i=n.event)||void 0===i?void 0:i.event_type)&&n.event.event_payload.userId===e&&(null===(r=this.socket)||void 0===r||r.removeEventListener("message",o),t())}catch(e){n(e)}};null===(s=this.socket)||void 0===s||s.addEventListener("message",o),setTimeout((()=>{var t;null===(t=this.socket)||void 0===t||t.removeEventListener("message",o),n(new Error(`Timeout: No response for deleting conversations for user ${e}`))}),1e4)}catch(e){n(e)}}))}))}getSocket(){return this.socket}}},629:function(e,t,n){var s=this&&this.__awaiter||function(e,t,n,s){return new(n||(n=Promise))((function(o,i){function r(e){try{c(s.next(e))}catch(e){i(e)}}function a(e){try{c(s.throw(e))}catch(e){i(e)}}function c(e){var t;e.done?o(e.value):(t=e.value,t instanceof n?t:new n((function(e){e(t)}))).then(r,a)}c((s=s.apply(e,t||[])).next())}))},o=this&&this.__rest||function(e,t){var n={};for(var s in e)Object.prototype.hasOwnProperty.call(e,s)&&t.indexOf(s)<0&&(n[s]=e[s]);if(null!=e&&"function"==typeof Object.getOwnPropertySymbols){var o=0;for(s=Object.getOwnPropertySymbols(e);o<s.length;o++)t.indexOf(s[o])<0&&Object.prototype.propertyIsEnumerable.call(e,s[o])&&(n[s[o]]=e[s[o]])}return n};Object.defineProperty(t,"__esModule",{value:!0}),t.CaptivateChatManager=void 0;const i=n(86),r=n(52);t.CaptivateChatManager=class{constructor(e,t="prod"){this.apiInstances={};for(const n of e)this.apiInstances[n]=new i.CaptivateChatAPI(n,t)}connectAll(){return s(this,void 0,void 0,(function*(){yield Promise.all(Object.values(this.apiInstances).map((e=>e.connect())))}))}getUserConversations(e){return s(this,void 0,void 0,(function*(){const t=e.apiKeys||Object.keys(this.apiInstances),n=this.apiInstances[t[0]],{apiKeys:s}=e,i=o(e,["apiKeys"]),a=yield n.getUserConversations(Object.assign(Object.assign({},i),{apiKeys:t}));return{conversations:a.conversations.map((e=>{const t=e.apiKey,n=this.apiInstances[t];if(!n)throw new Error(`No CaptivateChatAPI instance for apiKey: ${t}`);if(!n.getSocket())throw new Error(`WebSocket not initialized for apiKey: ${t}`);return new r.Conversation(e.conversationId,n.getSocket(),e.metadata,t)})),pagination:a.pagination}}))}getApiInstance(e){return this.apiInstances[e]}}},52:function(e,t){var n=this&&this.__awaiter||function(e,t,n,s){return new(n||(n=Promise))((function(o,i){function r(e){try{c(s.next(e))}catch(e){i(e)}}function a(e){try{c(s.throw(e))}catch(e){i(e)}}function c(e){var t;e.done?o(e.value):(t=e.value,t instanceof n?t:new n((function(e){e(t)}))).then(r,a)}c((s=s.apply(e,t||[])).next())}))};Object.defineProperty(t,"__esModule",{value:!0}),t.Conversation=void 0,t.Conversation=class{constructor(e,t,n,s){this.apiKey=s||"",this.conversationId=e,this.socket=t,this.listeners=new Map,this.metadata=n||null,this.local_id=Math.floor(1e4*Math.random()),this.socket.onmessage=this.handleMessage.bind(this)}handleMessage(e){var t,n;const s=JSON.parse(e.data),o=null===(t=s.event)||void 0===t?void 0:t.event_type;if(o&&this.listeners.has(o)){const e=s.event.event_payload;null===(n=this.listeners.get(o))||void 0===n||n.forEach((t=>t(e)))}}restartListeners(){this.socket.onmessage=this.handleMessage.bind(this)}addListener(e,t){var n;this.restartListeners(),this.listeners.has(e)||this.listeners.set(e,[]),null===(n=this.listeners.get(e))||void 0===n||n.push(t)}onMessage(e){this.addListener("bot_message",(t=>e(t.content,"ai_agent"))),this.addListener("livechat_message",(t=>e(t.content,"human_agent")))}onActionReceived(e){this.addListener("action",(t=>e(t.actions)))}onConversationUpdate(e){this.addListener("conversation_update",(t=>{e({type:t.type,conversationId:t.conversation_id,data:t.data})}))}onError(e){this.addListener("general_error",(t=>{e({conversationId:t.conversation_id,errorCode:t.error_code,errorDesc:t.error_desc})}))}sendMessage(e){return n(this,void 0,void 0,(function*(){return"string"==typeof e&&(e={type:"text",text:e}),this.sendPayload("user_message",{type:"message_create",client_msg_id:`unique-message-id-${Date.now()}`,conversation_id:this.conversationId,content:e})}))}setMetadata(e){return n(this,void 0,void 0,(function*(){if("object"!=typeof e||null===e)throw new Error("Metadata must be a non-null object.");return new Promise(((t,n)=>{const s={action:"sendMessage",event:{event_type:"metadata",event_payload:{metadata:e,client_msg_id:`metadata-${Date.now()}`,conversation_id:this.conversationId}}};this.socket.send(JSON.stringify(s));const o=e=>{e.conversation_id===this.conversationId&&(this.removeListener("metadata_update_success",o),t(e))};this.addListener("metadata_update_success",o),setTimeout((()=>{this.removeListener("metadata_update_success",o),n(new Error("Timeout: No response for metadata update"))}),15e3)}))}))}sendAction(e){return n(this,arguments,void 0,(function*(e,t={}){return this.sendPayload("action",{type:"normal",id:e,data:t,conversation_id:this.conversationId})}))}getTranscript(){return n(this,void 0,void 0,(function*(){return new Promise(((e,t)=>{const n={action:"sendMessage",event:{event_type:"conversation_transcript_request",event_payload:{conversation_id:this.conversationId}}};this.socket.send(JSON.stringify(n));const s=t=>{t.conversation_id===this.conversationId&&(this.removeListener("conversation_transcript",s),e(t.transcript))};this.addListener("conversation_transcript",s),setTimeout((()=>{this.removeListener("conversation_transcript",s),t(new Error("Timeout: No response for transcript request"))}),1e4)}))}))}getMetadata(){return n(this,void 0,void 0,(function*(){return new Promise(((e,t)=>{const n={action:"sendMessage",event:{event_type:"metadata_request",event_payload:{conversation_id:this.conversationId}}};this.socket.send(JSON.stringify(n));const s=t=>{t.conversation_id===this.conversationId&&(this.removeListener("conversation_metadata",s),e(t.content))};this.addListener("conversation_metadata",s),setTimeout((()=>{this.removeListener("conversation_metadata",s),t(new Error("Timeout: No response for metadata request"))}),1e4)}))}))}delete(){return n(this,void 0,void 0,(function*(){return new Promise(((e,t)=>{try{const n={action:"sendMessage",event:{event_type:"delete_conversation",event_payload:{conversation_id:this.conversationId}}};this.socket.send(JSON.stringify(n));const s=t=>{var n;const o=JSON.parse(t.data);"delete_conversation_success"===(null===(n=o.event)||void 0===n?void 0:n.event_type)&&o.event.event_payload.conversation_id===this.conversationId&&(this.socket.removeEventListener("message",s),e())};this.socket.addEventListener("message",s),setTimeout((()=>{this.socket.removeEventListener("message",s),t(new Error(`Timeout: No response for deleting conversation ${this.conversationId}`))}),1e4)}catch(e){t(e)}}))}))}editMessage(e,t){return n(this,void 0,void 0,(function*(){return"string"==typeof t&&(t={type:"text",text:t}),new Promise(((n,s)=>{this.sendPayload("edit_message",{type:"message_create",client_msg_id:`edit-message-id-${Date.now()}`,conversation_id:this.conversationId,message_id:e,content:t});const o=t=>{console.log(t),t.conversation_id===this.conversationId&&t.message_id===e&&(this.removeListener("message_edited_success",o),n())};this.addListener("message_edited_success",o),setTimeout((()=>{this.removeListener("message_edited_success",o),s(new Error("Timeout: No response for message edit"))}),1e4)}))}))}sendPayload(e,t){return n(this,void 0,void 0,(function*(){return new Promise(((n,s)=>{try{const s={action:"sendMessage",event:{event_type:e,event_payload:t}};this.socket.send(JSON.stringify(s)),n()}catch(e){s(e)}}))}))}removeListener(e,t){const n=this.listeners.get(e);n&&this.listeners.set(e,n.filter((e=>e!==t)))}getConversationId(){return this.conversationId}}},591:e=>{e.exports=function(){throw new Error("ws does not work in the browser. Browser clients must use the native WebSocket object")}}},t={};function n(s){var o=t[s];if(void 0!==o)return o.exports;var i=t[s]={exports:{}};return e[s].call(i.exports,i,i.exports,n),i.exports}n.g=function(){if("object"==typeof globalThis)return globalThis;try{return this||new Function("return this")()}catch(e){if("object"==typeof window)return window}}();var s={};return(()=>{var e=s;Object.defineProperty(e,"__esModule",{value:!0}),e.CaptivateChatManager=e.CaptivateChatAPI=void 0;const t=n(86);Object.defineProperty(e,"CaptivateChatAPI",{enumerable:!0,get:function(){return t.CaptivateChatAPI}});const o=n(629);Object.defineProperty(e,"CaptivateChatManager",{enumerable:!0,get:function(){return o.CaptivateChatManager}}),"undefined"!=typeof window&&(window.CaptivateChatAPI=t.CaptivateChatAPI,window.CaptivateChatManager=o.CaptivateChatManager)})(),s})()));